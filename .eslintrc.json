{
  "extends": ["next/core-web-vitals", "next/typescript"],
  "rules": {
    "import/order": [
      2,
      {
        "groups": [
          [
            "builtin",
            "external",
            "internal",
            "parent",
            "sibling",
            "index",
            "object",
            "type"
          ]
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next-intl",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "react-redux",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "react-hook-form",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "axios",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "moment",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "notistack",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@network/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@redux/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@hooks/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@helpers/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@layout/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@common/layout/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@opsTable/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@common/form/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@common/page/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@common/opsTable/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@common/inputs/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@forms/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@features/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@components/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@mui/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@mui/icons/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/common/types/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/common/enums/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@enums/**",
            "group": "external",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "newlines-between": "never"
      }
    ],
    // âœ… Additional best practices
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/jsx-boolean-value": ["error", "never"],
    "react/jsx-curly-brace-presence": [
      "error",
      { "props": "never", "children": "never" }
    ],
    "react/self-closing-comp": "error",
    "prefer-const": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-template": "error"
  }
}
